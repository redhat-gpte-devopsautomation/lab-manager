#/usr/bin/bash
# Author: 
#   - Mitesh The Mouse, mitsharm@redhat.com
#   - Prakhar Srivastava, psrivast@redhat.com
# Team: Ansible Automation - GPTE
# License: GPLv3

# Output Display function, it uses cowsay when installed
COW_MSG(){
  which cowsay &> /dev/null
  if [ "$?" -eq 0 ];then
	echo -e -n "\e[31m"
	echo -e "$1" | cowsay -p 
        echo -e -n "\e[0m"
  else
        echo -e "\e[31m-----------------------------"
	echo -e "$1"
        echo -e "-----------------------------\e[0m"
  fi
}

# Available environments for deploy
DEPLOY_ENV_TYPES="multitier, threetier, tower, finallab, molecule, nodes, haproxy, tower_patch, gitlab"
# Available environments for destroy
DESTROY_ENV_TYPES="multitier, threetier, tower, finallab, molecule, nodes"

# Custom error messages used with COW_MSG function
LAB_OPTION_ERROR_MSG="Error: Invalid Option\n
Options: [deploy, destroy]\n
Example: lab option argument"

LAB_COW_MSG="Error: Invalid Option\n
Options: [deploy, destroy]\n
Example: lab option argument"

DEPLOY_ERROR_MSG="
Error: Invalid Argument\n 
Arguments: [${DEPLOY_ENV_TYPES}]\n
Example: lab option argument"

DESTROY_ERROR_MSG="
Error: Invalid Argument\n
Arguments: [${DESTROY_ENV_TYPES}]\n
Example: lab option argument"


# Main Playbook
MAIN_PLAYBOOK=/srv/lab-setup/main.yml
export ANSIBLE_CONFIG=/srv/lab-setup/ansible.cfg
# CAlls
# deploy,destroy

if [ "${1}" == "deploy" ];then
	case ${2} in
		molecule) 
			ansible-playbook ${MAIN_PLAYBOOK} -e env_type=${2} 
			;;
		tower)
			ansible-playbook ${MAIN_PLAYBOOK} -e env_type=${2}
			;;
	 	multitier)
			ansible-playbook ${MAIN_PLAYBOOK} -e env_type=${2} 
			;;
	 	threetier)
			ansible-playbook ${MAIN_PLAYBOOK} -e env_type=${2} 
			;;
	 	nodes)
			ansible-playbook ${MAIN_PLAYBOOK} -e env_type=${2} 
			;;
		finallab)
			ansible-playbook ${MAIN_PLAYBOOK} -e env_type=${2} 
			;;	
	 	haproxy)
			ansible-playbook /srv/lab-setup/haproxy.yml -e env_type=pod -e pod_type=gitlab
			;;
		tower_patch) 
			ansible-playbook /srv/lab-setup/tower-patch.yml
			;;
		gitlab)
			ansible-playbook /srv/lab-setup/pod-main.yml -e env_type=pod -e pod_type=gitlab
			;;
			
		*)
			COW_MSG "${DEPLOY_ERROR_MSG}"
		 ;;
	esac

	elif [ "${1}" == "destroy" ]; then
	case ${2} in
		molecule) 
			ansible-playbook ${MAIN_PLAYBOOK} -e env_type=${2} -e env_destroy=true 
			;;
		tower)
			ansible-playbook ${MAIN_PLAYBOOK} -e env_type=${2} -e env_destroy=true
			;;
	 	multitier)
			ansible-playbook ${MAIN_PLAYBOOK} -e env_type=${2} -e env_destroy=true
			;;
	 	threetier)
			ansible-playbook ${MAIN_PLAYBOOK} -e env_type=${2} -e env_destroy=true
			;;
	 	nodes)
			ansible-playbook ${MAIN_PLAYBOOK} -e env_type=${2} -e env_destroy=true
			;;
	    finallab)
			ansible-playbook ${MAIN_PLAYBOOK} -e env_type=${2} -e env_destroy=true
			;;
		*)
			COW_MSG "${DESTROY_ERROR_MSG}"
		 ;;
	esac

	else
		COW_MSG "${LAB_OPTION_ERROR_MSG}"
fi


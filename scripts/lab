#/usr/bin/bash
# Author: 
#   - Mitesh The Mouse, mitsharm@redhat.com
#   - Prakhar Srivastava, psrivast@redhat.com
# Team: Ansible Automation - GPTE
# License: GPLv3
# Version: 2.0


# Main Playbook
#LAB_MGR_DIR=${LAB}
MAIN_PLAYBOOK=${LAB_MGR_DIR}/main.yml
export ANSIBLE_CONFIG=${LAB_MGR_DIR}/ansible.cfg
# CAlls
# deploy,destroy

usage() {
  echo -e  "\e[31mUsage: $0 (deploy|destroy|reconfigure|reset) [ -i instance_env_name ] [ -p pod_env_name ] \e[0m \n"
  exit 2
}


env_exec_deploy() {
  while  getopts "hi:p:" arg; do
    case ${arg} in
      i)
        ansible-playbook ${MAIN_PLAYBOOK} \
          -e provisioner=instances \
          -e env_name=${OPTARG} \
          -e email=${OPENTLC_USER_EMAIL} \
          -e subdomain=${SUBDOMAIN} \
          -e lab_mgr_dir=${LAB_MGR_DIR} \
          -e cloud_provider=${CLOUD_PROVIDER} \
          -e internal_domain=${INTERNAL_DOMAIN}
          ;;
      p)
        ansible-playbook ${MAIN_PLAYBOOK} \ 
          -e provisioner=pods \
          -e env_name=${OPTARG} \
          -e email=${OPENTLC_USER_EMAIL} \
          -e subdomain=${SUBDOMAIN} \
          -e lab_mgr_dir=${LAB_MGR_DIR} \
          -e cloud_provider=${CLOUD_PROVIDER} \
          -e internal_domain=${INTERNAL_DOMAIN}
        ;;
      h|*) usage ;;
    esac
  done
}
env_exec_destroy() {
  while  getopts "hi:p:" arg; do
    case ${arg} in
      i)
        ansible-playbook ${MAIN_PLAYBOOK} \
          -e provisioner=instances \
          -e env_destroy=true \
          -e env_name=${OPTARG} \
          -e email=${OPENTLC_USER_EMAIL} \
          -e subdomain=${SUBDOMAIN} \
          -e lab_mgr_dir=${LAB_MGR_DIR} \
          -e cloud_provider=${CLOUD_PROVIDER} \
          -e internal_domain=${INTERNAL_DOMAIN}
        ;;
      p)
        ansible-playbook ${MAIN_PLAYBOOK} \
          -e provisioner=pods \
          -e provisioner=instances \
          -e env_destroy=true \
          -e email=${OPENTLC_USER_EMAIL} \
          -e subdomain=${SUBDOMAIN} \
          -e lab_mgr_dir=${LAB_MGR_DIR} \
          -e cloud_provider=${CLOUD_PROVIDER} \
          -e internal_domain=${INTERNAL_DOMAIN}
        ;;
      h|*) usage ;;
    esac
  done
}

env_exec_reconfigure() {
  while  getopts "hi:p:" arg; do
    case ${arg} in
      i)
        ansible-playbook ${MAIN_PLAYBOOK} \
          -e provisioner=instances \
          -e env_name=${OPTARG} \
          -e only_config=true \
          -e email=${OPENTLC_USER_EMAIL} \
          -e subdomain=${SUBDOMAIN} \
          -e lab_mgr_dir=${LAB_MGR_DIR} \
          -e cloud_provider=${CLOUD_PROVIDER} \
          -e internal_domain=${INTERNAL_DOMAIN}
        ;;
      p)
        ansible-playbook ${MAIN_PLAYBOOK} \
          -e provisioner=pods \
          -e env_name=${OPTARG} \
          -e only_config=true 
          -e email=${OPENTLC_USER_EMAIL} \
          -e subdomain=${SUBDOMAIN} \
          -e lab_mgr_dir=${LAB_MGR_DIR} \
          -e cloud_provider=${CLOUD_PROVIDER} \
          -e internal_domain=${INTERNAL_DOMAIN}       
        ;;
      h|*) usage ;;
    esac
  done
}

env_exec_reset() {
  while  getopts "hi:p:" arg; do
    case ${arg} in
      i)
        ansible-playbook ${MAIN_PLAYBOOK} \
          -e provisioner=instances \
          -e env_destroy=true \
          -e env_name=${OPTARG} \
          -e email=${OPENTLC_USER_EMAIL} \
          -e subdomain=${SUBDOMAIN} \
          -e lab_mgr_dir=${LAB_MGR_DIR} \
          -e cloud_provider=${CLOUD_PROVIDER} \
          -e internal_domain=${INTERNAL_DOMAIN}
       
        ansible-playbook ${MAIN_PLAYBOOK} \
          -e provisioner=instances \
          -e env_name=${OPTARG} \
          -e email=${OPENTLC_USER_EMAIL} \
          -e subdomain=${SUBDOMAIN} \
          -e lab_mgr_dir=${LAB_MGR_DIR} \
          -e cloud_provider=${CLOUD_PROVIDER} \
          -e internal_domain=${INTERNAL_DOMAIN}
        ;;
      p)
        ansible-playbook ${MAIN_PLAYBOOK} \
          -e provisioner=pods \
          -e provisioner=instances \
          -e env_destroy=true \
          -e email=${OPENTLC_USER_EMAIL} \
          -e subdomain=${SUBDOMAIN} \
          -e lab_mgr_dir=${LAB_MGR_DIR} \
          -e cloud_provider=${CLOUD_PROVIDER} \
          -e internal_domain=${INTERNAL_DOMAIN}

        ansible-playbook ${MAIN_PLAYBOOK} \ 
          -e provisioner=pods \
          -e env_name=${OPTARG} \
          -e email=${OPENTLC_USER_EMAIL} \
          -e subdomain=${SUBDOMAIN} \
          -e lab_mgr_dir=${LAB_MGR_DIR} \
          -e cloud_provider=${CLOUD_PROVIDER} \
          -e internal_domain=${INTERNAL_DOMAIN}
        ;;
      h|*) usage ;;
    esac
  done
}

case ${1} in
  deploy) env_exec_deploy ${@:2};;
  destroy) env_exec_destroy ${@:2};;
  reconfigure) env_exec_reconfigure ${@:2};;
  reset) env_exec_reset ${@:2};;
  help|*) usage;;
esac

if [ ${OPTIND} -lt 3 ];
  then 
    echo "No options were passed"
    usage
fi


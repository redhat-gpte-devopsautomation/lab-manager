#/usr/bin/bash
# Author: 
#   - Mitesh The Mouse, mitsharm@redhat.com
#   - Prakhar Srivastava, psrivast@redhat.com
# Team: Ansible Automation - GPTE
# License: GPLv3
# Version: 2.0


# Main Playbook
#LAB_MGR_DIR=${LAB}
MAIN_PLAYBOOK=${LAB_MGR_DIR}/main.yml
export ANSIBLE_CONFIG=${LAB_MGR_DIR}/ansible.cfg
# CAlls
# deploy,destroy

usage() {
  echo -e  "\e[31m Usage: $0 (deploy|destroy|reconfigure|reset) [ -i instance_env_name ] [ -p pod_env_name ] \e[0m \n"
  exit 2
}


env_exec_deploy() {
  while  getopts "hi:p:" arg; do
    case ${arg} in
      i)
        ansible-playbook ${MAIN_PLAYBOOK} -e provisioner=instances -e env_name=${OPTARG} ;;
      p)
        ansible-playbook ${MAIN_PLAYBOOK} -e provisioner=pods -e env_name=${OPTARG} ;;
      h|*) usage ;;
    esac
  done
}
env_exec_destroy() {
  while  getopts "hi:p:" arg; do
    case ${arg} in
      i)
        ansible-playbook ${MAIN_PLAYBOOK} -e provisioner=instances -e env_name=${OPTARG} -e env_destroy=true ;;
      p)
        ansible-playbook ${MAIN_PLAYBOOK} -e provisioner=pods -e env_name=${OPTARG} -e env_destroy=true ;;
      h|*) usage ;;
    esac
  done
}

env_exec_reconfigure() {
  while  getopts "hi:p:" arg; do
    case ${arg} in
      i)
        ansible-playbook ${MAIN_PLAYBOOK} -e provisioner=instances -e env_name=${OPTARG} -e only_config=true ;;
      p)
        ansible-playbook ${MAIN_PLAYBOOK} -e provisioner=pods -e env_name=${OPTARG} -e only_config=true ;;
      h|*) usage ;;
    esac
  done
}

env_exec_reset() {
  while  getopts "hi:p:" arg; do
    case ${arg} in
      i)
        ansible-playbook ${MAIN_PLAYBOOK} -e provisioner=instances -e env_name=${OPTARG} -e env_destroy=true
        ansible-playbook ${MAIN_PLAYBOOK} -e provisioner=instances -e env_name=${OPTARG} ;;
      p)
        ansible-playbook ${MAIN_PLAYBOOK} -e provisioner=pods -e env_name=${OPTARG} -e env_destroy=true
        ansible-playbook ${MAIN_PLAYBOOK} -e provisioner=pods -e env_name=${OPTARG} ;;
      h|*) usage ;;
    esac
  done
}

case ${1} in
  deploy) env_exec_deploy ${@:2};;
  destroy) env_exec_destroy ${@:2};;
  reconfigure) env_exec_reconfigure ${@:2};;
  reset) env_exec_reset ${@:2};;
  help|*) usage;;
esac

if [ $OPTIND -lt 3 ];
  then 
    echo "No options were passed"
    usage
fi


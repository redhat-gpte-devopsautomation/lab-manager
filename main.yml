---

- import_playbook: "./defaults/playbooks/instance-provisioner.yml"
  when:
    - "not only_config |default(false) |bool"
    - 'provisioner == "instances"'
    - 'env_name is defined'
    - not env_destroy | default(false) | bool 

- import_playbook: "./defaults/playbooks/instance-config.yml"
  when:
    - 'provisioner == "instances"'
    - 'env_name is defined'
    - instance_configure | default(true) | bool
    - not env_destroy | default(false) | bool  

- import_playbook: "./defaults/playbooks/instance-destroy.yml"
  when: 
    - 'env_name is defined'
    - 'provisioner == "instances"'
    - env_destroy | default(false) | bool

- name: Import bind9 pod update playbook
  import_playbook: ./environments/pods/bind9/config.yml
  when: 
    - 'env_name is defined'
    - 'provisioner == "instances"'

# Pod provisioner and destroyer
- name: Import config/provision playbook from environment
  vars:
    find_config:
      - ./environments/{{ provisioner }}/{{ env_name }}/provisioner.yml
      - ./defaults/playbooks/pod-provisioner.yml
  import_playbook: "{{ lookup('first_found', find_config) }}"
  when: 
    - not env_destroy | default(false) | bool
    - provisioner == 'pods'

- name: Import destroy playbook from environment
  vars:
    find_destroy:
      - ./environments/{{ provisioner }}/{{ env_name }}/destroy.yml
      - ./defaults/playbooks/pod-destroy.yml
  import_playbook: "{{ lookup('first_found', find_destroy) }}"
  when: 
    - env_destroy | default(false) | bool
    - provisioner == 'pods'
    
- name: Pod configuration only
  vars:
    find_update:
      - ./environments/{{ provisioner }}/{{ env_name }}/config.yml
      - ./defaults/playbooks/pod_config_none.yml
  import_playbook: "{{ lookup('first_found', find_update) }}"
  when:
    - "pod_config |default(false) |bool"
    - 'env_name is defined'
    - 'provisioner is defined'

- name: Import haproxy pod update playbook
  import_playbook: ./environments/pods/haproxy/config.yml
  when:
    - "not pod_config |default(false) |bool"
    - 'env_name is defined'
    - 'env_name != "haproxy"'
    - 'provisioner is defined'
